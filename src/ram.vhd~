library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use WORK.workpack.all;
use IEEE.math_real.all;

entity MEM is
	port(   data_in  : in COMPLEX_ARRAY(0 to L-1);
		address  : in std_logic_vector(7 downto 0);
		bank_num : in std_logic_vector(3 downto 0);
		CLK, WE  : in std_logic;
		data_out : out COMPLEX);
end MEM;
	
architecture BHV of MEM is 
	type BANK is array(0 to 2**address'length-1) of COMPLEX;
	type T_ram is array(0 to 2**bank_num'length-1) of BANK;
	signal RAM: T_ram;
	signal read_address  : std_logic_vector(3 downto 0);
	signal read_bank_num : std_logic_vector(7 downto 0);
begin
	process(CLK)
	begin
		if CLK'event and CLK = '1' then
			if WE = '1' then
				RAM(to_integer(unsigned(bank_num)))(to_integer(unsigned(address))) <= data_in;
			end if;
			read_address <= address;
			read_bank_num <= bank_num;
		end if;
	end process;
	
	data_out <= RAM(to_integer(unsigned(read_bank_num)))(to_integer(unsigned(read_address)));
end BHV;
